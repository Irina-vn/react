{"version":3,"sources":["components/Profile/styles.js","components/Profile/Profile.js","components/Statistics/styles.js","components/Statistics/Statistics.js","components/FriendList/styles.js","components/FriendList/FriendList.js","components/TransactionHistory/styles.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["Wrapper","styled","div","Description","Img","img","Name","p","List","ul","Item","li","Quantity","span","Profile","name","tag","location","avatar","stats","src","alt","width","height","followers","views","likes","defaultProps","Section","section","Title","h2","Math","floor","random","toString","Statistics","title","map","stat","key","id","label","percentage","Span","props","online","FriendList","friends","isOnline","bool","Table","table","Type","td","Amount","Currency","Column","thead","Cell","tr","LineList","tbody","LineItem","TransactionHistory","items","type","amount","currency","App","user","statisticalData","friendList","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e448ddab.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background-color: #e7ecf2;\n  max-width: 428px;\n  margin: 0 auto;\n  padding-top: 88px;\n  padding-bottom: 88px;\n  padding-right: 90px;\n  padding-left: 90px;\n  margin-bottom: 30px;\n  box-shadow: 5px 5px 10px rgba(18, 34, 54, 0.5);\n`;\nexport const Description = styled.div`\n  font-size: 15px;\n  margin: 0 auto;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 32px;\n  padding-bottom: 30px;\n`;\n\nexport const Img = styled.img`\n  height: 100px;\n  width: 100px;\n  border-radius: 100px;\n  margin-bottom: 32px;\n`;\nexport const Name = styled.p`\n  font-size: 16px;\n  color: #122236;\n  font-weight: 700;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-around;\n  background-color: #f3f6f9;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #e4e9f0;\n  height: 74px;\n  width: 84px;\n`;\n\nexport const Quantity = styled.span`\n  color: #122236;\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Wrapper,\n  Description,\n  List,\n  Img,\n  Name,\n  Item,\n  Quantity,\n} from \"./styles\";\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <>\n      <Wrapper>\n        <Description>\n          <Img src={avatar} alt={name} width=\"100\" height=\"100\" />\n          <Name>{name}</Name>\n          <p>{tag}</p>\n          <p>{location}</p>\n        </Description>\n        <List>\n          <Item>\n            <span>Followers</span>\n            <Quantity>{stats.followers}</Quantity>\n          </Item>\n          <Item>\n            <span>Views</span>\n            <Quantity>{stats.views}</Quantity>\n          </Item>\n          <Item>\n            <span>Likes</span>\n            <Quantity>{stats.likes}</Quantity>\n          </Item>\n        </List>\n      </Wrapper>\n    </>\n  );\n}\n\nProfile.defaultProps = {\n  tag: \"No tagname\",\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\n\nfunction generateColor() {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nconst Section = styled.section`\n  max-width: 400px;\n  max-height: 252px;\n  background-color: #eff3f6;\n  margin: 0 auto;\n  padding: 60px 50px;\n  margin-bottom: 30px;\n`;\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  text-transform: uppercase;\n  color: #122236;\n  background-color: #ffffff;\n  padding: 30px 78px;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-evenly;\n`;\nconst Item = styled.li`\n  width: 60px;\n  height: 66px;\n  background-color: ${() => generateColor()};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #c7cacc;\n`;\nexport { generateColor, Title, Section, List, Item };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Section, Title, List, Item } from \"./styles\";\n\nfunction Statistics({ title, stats }) {\n  return (\n    <>\n      <Section>\n        <Title>{title}</Title>\n\n        <List>\n          {stats.map((stat) => (\n            <Item key={stat.id}>\n              <span>{stat.label}</span>\n              <span>{stat.percentage}%</span>\n            </Item>\n          ))}\n        </List>\n      </Section>\n    </>\n  );\n}\n\nStatistics.defaultProps = {\n  title: \"\",\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from \"styled-components\";\n\nconst List = styled.ul`\n  max-width: 400px;\n  margin: 0 auto;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n`;\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  box-shadow: 5px 5px 10px rgba(18, 34, 54, 0.5);\n  margin-bottom: 10px;\n  min-height: 60px;\n  min-width: 200px;\n`;\nconst Span = styled.span`\n  position: relative;\n  padding-left: 24px;\n\n  &::before {\n    content: \"\";\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    position: absolute;\n    top: -5px;\n    left: 5px;\n    background-color: ${(props) => (props.online ? \"green\" : \"red\")};\n  }\n`;\n\nconst Img = styled.img`\n  border-radius: 10px;\n`;\nconst Name = styled.p`\n  color: #122236;\n  padding-left: 10px;\n`;\nexport { List, Item, Span, Img, Name };\n","import React from \"react\";\nimport PropTypes, { bool } from \"prop-types\";\nimport { List, Item, Span, Img, Name } from \"./styles\";\n\nexport default function FriendList({ friends }) {\n  return (\n    <>\n      <List>\n        {friends.map(({ avatar, name, isOnline, id }) => {\n          return (\n            <Item key={id}>\n              <Span online={isOnline} />\n              <Img src={avatar} alt=\"\" width=\"48\" />\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n\nFriendList.defaultProps = {\n  id: \"\",\n  isOnline: bool,\n  avatar:\n    \"https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder\",\n  name: \"\",\n};\n\nFriendList.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from \"styled-components\";\n\nconst Table = styled.table`\n  min-width: 432px;\n  margin: 0 auto;\n  border: 1px solid #222222;\n  margin-bottom: 30px;\n`;\nconst Type = styled.td``;\nconst Amount = styled.td``;\nconst Currency = styled.td``;\n\nconst Column = styled.thead`\n  background-color: #00bcd5;\n  text-transform: uppercase;\n`;\nconst Cell = styled.tr`\n  height: 30px;\n`;\nconst LineList = styled.tbody`\n  text-transform: capitalize;\n`;\n\nconst LineItem = styled.tr`\n  height: 30px;\n\n  &:nth-child(2n) {\n    background-color: #ecf1f4;\n  }\n`;\n\nexport { Table, Type, Amount, Currency, Column, Cell, LineList, LineItem };\n","// import  from \"prop-types\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  Type,\n  Amount,\n  Currency,\n  Column,\n  Cell,\n  LineList,\n  LineItem,\n} from \"./styles\";\n\nfunction TransactionHistory({ items }) {\n  return (\n    <>\n      <Table>\n        <Column>\n          <Cell>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </Cell>\n        </Column>\n\n        <LineList>\n          {items.map(({ id, type, amount, currency }) => {\n            return (\n              <LineItem key={id}>\n                <Type>{type}</Type>\n                <Amount>{amount}</Amount>\n                <Currency>{currency}</Currency>\n              </LineItem>\n            );\n          })}\n        </LineList>\n      </Table>\n    </>\n  );\n}\n\nTransactionHistory.defaultProps = {\n  id: 0,\n  type: \"\",\n  amount: 0,\n  currency: \"\",\n};\n\nTransactionHistory.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport user from \"../user.json\";\nimport statisticalData from \"../statistical-data.json\";\nimport friendList from \"../friends.json\";\nimport transactions from \"../transactions.json\";\nimport Profile from \"./Profile/Profile\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FriendList from \"./FriendList/FriendList\";\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\n\nexport default function App() {\n  const { name, tag, location, avatar, stats } = user;\n  return (\n    <>\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friendList} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport base from \"./base.css\";\n///Компонент называется всегда с большой буквы\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}