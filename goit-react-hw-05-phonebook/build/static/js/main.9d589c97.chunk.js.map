{"version":3,"sources":["components/Form/styles.js","components/Form/Form.js","components/ContactItem/styles.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/styles.js","components/Filter/Filter.js","components/Header/styles.js","components/Header/Header.js","components/Alert/styles.js","components/Alert/Alert.js","components/App.js","index.js"],"names":["FormContact","styled","form","InputForm","input","ButtonForm","button","Form","state","name","number","handlerChange","e","target","value","setState","handlerSubmit","preventDefault","contact","id","uuid","props","addContact","this","onSubmit","type","onChange","Component","Button","ItemContact","li","ContactItem","remove","onClick","ContactList","filtredContacts","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","FilterInput","WrapFilter","div","Filter","Title","h1","Header","WrapAlert","Message","span","Alert","contacts","filter","alert","handlerFilter","toLowerCase","includes","find","item","setTimeout","prevState","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","in","unmountOnExit","appear","unmountOnEnter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d589c97.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormContact = styled.form`\n  margin-top: 20px;\n  width: 400px;\n  padding: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  margin-bottom: 30px;\n`;\nexport const InputForm = styled.input`\n  width: 380px;\n  padding: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 380px;\n  background-color: blue;\n  color: #ffffff;\n  padding: 3px;\n  border: none;\n`;\n","import React, { Component } from \"react\";\nimport uuid from \"react-uuid\";\nimport { FormContact, InputForm, ButtonForm } from \"./styles\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handlerChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlerSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    this.props.addContact(contact);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <FormContact onSubmit={this.handlerSubmit}>\n        <p>Name </p>\n        <InputForm\n          type=\"text\"\n          value={name}\n          onChange={this.handlerChange}\n          name=\"name\"\n        />\n\n        <p>Number </p>\n        <InputForm\n          type=\"tel\"\n          value={number}\n          onChange={this.handlerChange}\n          name=\"number\"\n        />\n\n        <ButtonForm type=\"submit\"> Add contact </ButtonForm>\n      </FormContact>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 4px 10px;\n  background-color: red;\n  color: #ffffff;\n  border: none;\n`;\nexport const ItemContact = styled.li`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  margin-bottom: 6px;\n  padding: 6px;\n`;\n","import React from \"react\";\nimport { ItemContact, Button } from \"./styles\";\n\nexport default function ContactItem({ id, name, number, remove }) {\n  return (\n    <>\n      <ItemContact>\n        <p>{name}</p>\n        <p>{number}</p>\n        <Button type=\"button\" onClick={(e) => remove(id)}>\n          X\n        </Button>\n      </ItemContact>\n    </>\n  );\n}\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nexport default function ContactList({ filtredContacts, remove }) {\n  return (\n    <>\n      <TransitionGroup component=\"ul\">\n        {filtredContacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"list\">\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              remove={remove}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const FilterInput = styled.input`\n  width: 380px;\n`;\n\nexport const WrapFilter = styled.div`\n  width: 400px;\n  padding: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport { FilterInput, WrapFilter } from \"./styles\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <>\n      <WrapFilter>\n        <label>\n          Find contacts by name\n          <FilterInput\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            name=\"filter\"\n          />\n        </label>\n      </WrapFilter>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  color: blue;\n  padding-top: 14px;\n`;\n","import React from \"react\";\nimport { Title } from \"./styles.js\";\n\nconst Header = () => {\n  return <Title>Phonebook</Title>;\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const WrapAlert = styled.div`\n  position: absolute;\n  right: 300px;\n  top: 16px;\n  background-color: red;\n  text-align: center;\n  padding: 4px 30px;\n`;\n\nexport const Message = styled.span`\n  font-weight: 600;\n  color: white;\n`;\n","import React from \"react\";\nimport { WrapAlert, Message } from \"./styles\";\n\nconst Alert = () => {\n  return (\n    <WrapAlert>\n      <Message>Contact already exists</Message>\n    </WrapAlert>\n  );\n};\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Form from \"./Form/Form\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Header from \"./Header/Header\";\nimport Alert from \"./Alert/Alert\";\n\nexport default class extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    alert: false,\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handlerChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlerFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (contact) => {\n    const { contacts } = this.state;\n    const isName = contacts.find((item) => item.name === contact.name);\n\n    if (isName) {\n      this.setState({ alert: true });\n      setTimeout(() => this.setState({ alert: false }), 3000);\n      // alert(`${contact.name} is already in contact.`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter, contacts, alert } = this.state;\n    const filtredContacts = this.handlerFilter();\n\n    return (\n      <>\n        <CSSTransition\n          classNames=\"stylesAlert\"\n          in={this.state.alert}\n          // appear={true}\n          timeout={250}\n          unmountOnExit\n        >\n          <Alert alert={alert} />\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"fade\"\n          timeout={500}\n          unmountOnEnter\n        >\n          <Header />\n        </CSSTransition>\n\n        <Form addContact={this.addContact} />\n        {/* <h2>Contacts</h2> */}\n        <Filter onChange={this.handlerChange} value={filter} />\n        {contacts.length > 0 && (\n          <ContactList\n            filtredContacts={filtredContacts}\n            remove={this.removeContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\nimport \"./components/styles.css\";\n///Компонент называется всегда с большой буквы\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}