{"version":3,"sources":["components/Stats/styles.js","components/Stats/Stats.js","components/Section/Section.js","components/FeedbackOptions/styles.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Item","styled","p","Stats","good","neutral","bad","total","positivePercentage","Section","title","children","Button","button","FeedbackOptions","onLeaveFeedback","type","onClick","name","Notification","message","propTepes","PropTypes","string","App","state","changeHandler","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","trunc","this","positiveFeedback","options","Component","ReactDOM","render","document","getElementById"],"mappings":"2YAEO,IAAMA,EAAOC,IAAOC,EAAV,KCEF,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACE,kBAACR,EAAD,aAAYI,EAAZ,KACA,kBAACJ,EAAD,gBAAeK,GACf,kBAACL,EAAD,YAAWM,GACX,kBAACN,EAAD,cAAaO,GACb,kBAACP,EAAD,0BAAyBQ,EAAzB,OCdS,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,iCACE,4BAAKD,GACJC,I,mKCNF,IAAMC,EAASX,IAAOY,OAAV,KCEJ,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,oCACE,kBAACH,EAAD,CAAQI,KAAK,SAASC,QAASF,EAAiBG,KAAK,QAArD,QAGA,kBAACN,EAAD,CAAQI,KAAK,SAASC,QAASF,EAAiBG,KAAK,WAArD,WAIA,kBAACN,EAAD,CAAQI,KAAK,SAASC,QAASF,EAAiBG,KAAK,OAArD,Q,qBCXS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,oCACE,8BAAOA,IAKbD,EAAaE,UAAY,CACvBD,QAASE,IAAUC,Q,ICLAC,E,4MACnBC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,cAAgB,SAACC,GACf,IAAMT,EAAOS,EAAEC,OAAOV,KACtB,EAAKW,UAAS,SAACJ,GAAD,sBACXP,EAAOO,EAAMP,GAAQ,O,EAI1BY,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjBrB,KADiB,EACXC,QADW,EACFC,K,EAIzByB,gCAAkC,WAAO,IAC/B3B,EAAS,EAAKqB,MAAdrB,KACR,OAAO4B,KAAKC,MAAc,IAAP7B,EAAc,EAAK0B,uB,uDAG9B,IAAD,EACwBI,KAAKT,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ2B,KAAKJ,qBACbK,EAAmBD,KAAKH,kCAC9B,OACE,oCACE,kBAACtB,EAAD,CAASC,MAAM,yBACb,kBAACI,EAAD,CACEsB,QAASF,KAAKT,MACdV,gBAAiBmB,KAAKR,iBAI1B,kBAACjB,EAAD,CAASC,MAAM,cACZH,EAAQ,EACP,kBAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB2B,IAGtB,kBAAChB,EAAD,CAAcC,QAAQ,4B,GA/CDiB,a,MCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.19e76dcf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Item = styled.p`\n  background-color: teal;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./styles\";\n\nexport default function Stats({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <Item>Good:{good} </Item>\n      <Item>Neutral:{neutral}</Item>\n      <Item>Bad:{bad}</Item>\n      <Item>Total:{total}</Item>\n      <Item>Positive feedback:{positivePercentage} %</Item>\n    </>\n  );\n}\n\nStats.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-right: 10px;\n  &:hover {\n    cursor: pointer;\n    background-color: teal;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"./styles\";\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <>\n      <Button type=\"button\" onClick={onLeaveFeedback} name=\"good\">\n        Good\n      </Button>\n      <Button type=\"button\" onClick={onLeaveFeedback} name=\"neutral\">\n        Neutral\n      </Button>\n\n      <Button type=\"button\" onClick={onLeaveFeedback} name=\"bad\">\n        Bad\n      </Button>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object,\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return (\n    <>\n      <span>{message}</span>\n    </>\n  );\n}\n\nNotification.propTepes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport Stats from \"./Stats/Stats\";\nimport Section from \"./Section/Section\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./Notification/Notification\";\n// import styled from \"styled-components\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeHandler = (e) => {\n    const name = e.target.name;\n    this.setState((state) => ({\n      [name]: state[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.trunc((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.changeHandler}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Stats\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n///Компонент называется всегда с большой буквы\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}