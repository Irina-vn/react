{"version":3,"sources":["components/Form/Form.js","components/ContactItem/styles.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["Form","state","name","number","handlerChange","e","target","value","setState","handlerSubmit","preventDefault","contact","id","uuid","props","addContact","this","onSubmit","type","onChange","Component","Button","styled","button","ItemContact","li","ContactItem","remove","onClick","ContactList","filtredContacts","map","key","Filter","contacts","filter","handlerFilter","toLocaleLowerCase","includes","find","item","alert","prevState","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","console","log","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad8421e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport uuid from \"react-uuid\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handlerChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlerSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    this.props.addContact(contact);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handlerSubmit}>\n        <p>Name </p>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={this.handlerChange}\n          name=\"name\"\n        />\n\n        <p>Number </p>\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={this.handlerChange}\n          name=\"number\"\n        />\n\n        <button type=\"submit\"> Add contact </button>\n      </form>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 0px 1px;\n`;\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport { ItemContact, Button } from \"./styles\";\n\nexport default function ContactItem({ id, name, number, remove }) {\n  return (\n    <>\n      <ItemContact>\n        <p>\n          {name}:{number}\n          <Button type=\"button\" onClick={(e) => remove(id)}>\n            Delete\n          </Button>\n        </p>\n      </ItemContact>\n    </>\n  );\n}\n","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nexport default function ContactList({ filtredContacts, remove }) {\n  return (\n    <ul>\n      {filtredContacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          remove={remove}\n        />\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={value} onChange={onChange} name=\"filter\" />\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"./Form/Form\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nexport default class extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts !== 0) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"Contact Up\");\n\n    // console.log(\"prevState:\", prevState);\n    // console.log(\"this.state:\", this.state);\n\n    if (prevState.contacts !== this.state.contacts) {\n      console.log(\"LocalStorage\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handlerChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlerFilter = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  addContact = (contact) => {\n    const { contacts } = this.state;\n    const isName = contacts.find((item) => item.name === contact.name);\n\n    if (isName) {\n      alert(`${contact.name} is already in contact.`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtredContacts = this.handlerFilter();\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.handlerChange} value={filter} />\n        <ContactList\n          filtredContacts={filtredContacts}\n          remove={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n///Компонент называется всегда с большой буквы\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}